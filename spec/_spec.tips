

* PHPSPEC *
    $this->prophet = new \Prophecy\Prophet; $user->reveal();
    $user = $this->prophet->prophesize()->willExtend('stdClass')->willImplement('Reader\ReaderInterface');
    $this->prophet->checkPredictions(); 

    Return() shouldBe() BeLike() BeApproximately()
    $this->shouldTrigger(E_USER_DEPRECATED)->duringSetStars(4); duringInstantiation()
        Throw->during('setRating', array(-3)); 
    HaveType() BeAnInstanceOf() Implement()

    hasSoundtrack() isSoundtrack() $this->shouldHaveSoundtrack(); shouldBeSoundtrack();
    shouldHaveCount(1);     shouldBeString();    shouldContain('Jane Smith');
    HaveKeyWithValue('k', 'v'); shouldIterateLike()
    houldHaveKey('v'); shouldIterateAs(new \ArrayIterator()) shouldYield(new \ArrayIterator())
    shouldStartIteratingAs() shouldContain() shouldStartWith() shouldMatch()

* PROPHECY *
    willExtend() willImplemen(t) willBeConstructedWith() reveal()
    addMethodProphecy() getMethodProphecies() makeProphecyMethodCall()
    findProphecyMethodCalls() checkProphecyMethodsPredictions()

    Argument::is($value) ::exact($value) ::type($typeOrClass) ::which($method, $value) 
        ::that(callback) ::any() ::cetera() ::containingString($value) - checks that the argument contains a specific string value
    CallPrediction or shouldBeCalled()  shouldNotBeCalled()  shouldBeCalledTimes($count)  should($callback) -



TIPS
```
CLASS
public function getwsdlAction($params=[2]): void
    {
        $autodiscover = new \Laminas\Soap\AutoDiscover();

        $autodiscover
            ->setClass('\Soaps\Manager\ServerManager' )
            ->setUri(\Soaps\Manager\ServerManager::$URL)
            ->setBindingStyle();
            
        header('Content-Type: text/xml');
        $wsdl = $autodiscover->generate();
        echo $wsdl->toXML();

    }

PHPSPEC
function it_can_get_wsdl()
    {
        ob_start();
     //  $p = (new \Prophecy\Prophet)->prophesize()->willExtend(IndexController::class)->reveal();
     //  $p->getwsdlAction()->will();

        
    $this->getwsdlAction()->shouldReturn(null); #error, no return at all

        $this->getwsdlAction()->shouldBeLike(null);
        $this->getwsdlAction()->shouldBeEqualTo(null);
        ob_end_clean();
    }
```